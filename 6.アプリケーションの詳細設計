<HTTP method>
〇POSTの使用事例
ユーザーの登録
商品の注文
ブログ記事の投稿

〇PATCHの使用事例
ユーザーのプロフィールの更新（退会処理含む）
商品の価格の変更
ブログ記事の編集

〇PUTの使用事例
ユーザーのパスワードの変更
商品の在庫の更新
ブログ記事の公開

+++/config/routes.rb
Rails.application.routes.draw do
 
  root to: 'public/homes#top'
  get '/about' => 'public/homes#about'
  get '/admin' => 'admin/homes#top'

  scope module: :public do
    devise_for :customers, controllers: {
      sessions: 'public/customers/sessions',
      passwords: 'public/customers/passwords',
      registrations: 'public/customers/registrations'
    }
  end

  scope module: :public do
    resource  :customers, only: [:show, :edit, :update] do
      collection do
        get 'delete'
        patch 'deactive'
      end
    end
    resources :items, only: [:index, :show]
    resources :deliveries, only: [:index, :create, :edit, :update, :destroy]
    resources :cart_items, only: [:index, :create, :destroy, :update] do
      collection do
        delete 'cart_items' => 'cart_items#destroy_all'
      end
    end
    resources :orders, only: [:new, :create, :index, :show] do
      collection do
        post 'confirm'
        get 'complete'
      end
    end
  end

  scope module: :admin do
    devise_for :admin, controllers: {
      sessions: 'admin/admin/sessions',
      passwords: 'admin/admin/passwords',
      registrations: 'admin/admin/registrations'
    }
  end

  namespace :admin do
    resources :orders, only: [:show] do
        collection do
          patch 'status' do
        end
    end
    resources :items, only: [:index, :new, :create, :show, :edit, :update] do
      collection do
        patch 'status'
      end
    end
    resources :customers, only: [:index, :show, :edit, :update]
    resources :genres, only: [:index, :create, :edit, :update]
    resources :order_details, only: [:show] do
      collection do
        patch 'status'
      end
    end
  end

end

<<<基本
Rails.application.routes.draw do
  # トップページ
  get '/', to: 'homes#top'

  # アバウトページ
  get '/about', to: 'homes#about'

  # 商品一覧
  resources :items, only: [:index, :show]

  # 顧客の会員登録
  get '/customers/sign_up', to: 'registrations#new'
  post '/customers', to: 'registrations#create'

  # 顧客ログイン
  get '/customers/sign_in', to: 'sessions#new'
  post '/customers/sign_in', to: 'sessions#create'
  delete '/customers/sign_out', to: 'sessions#destroy'

  # 顧客マイページ
  get '/customers/:id', to: 'customers#show'

  # 顧客の登録情報編集
  get '/customers/:id/edit', to: 'customers#edit'
  patch '/customers/:id', to: 'customers#update'

  # 顧客の退会確認
  get '/customers/delete', to: 'customers#delete'
  patch '/customers/deactive', to: 'customers#deactive'

  # 配送先一覧
  resources :deliveries, only: [:index, :create, :edit, :update, :destroy]

  # カート内商品一覧
  resources :cart_items, only: [:index, :update, :destroy, :create]

  # 注文情報入力画面
  get '/orders/new', to: 'orders#new'

  # 注文情報確認画面
  get '/orders/confirm', to: 'orders#confirm'

  # 注文完了画面
  get '/orders/complete', to: 'orders#complete'

  # 注文確定処理
  post '/orders', to: 'orders#create'

  # 注文履歴
  resources :orders, only: [:index, :show]

  # 注文詳細画面
  get '/orders/:id', to: 'orders#show'

  # 注文ステータス
  patch '/orders/:id', to: 'orders#status'

  # 管理者ログイン
  get '/admin/sign_in', to: 'admin/sessions#new'
  post '/admin/sign_in', to: 'admin/sessions#create'
  delete '/admin/sign_out', to: 'admin/sessions#destroy'

  # 管理者トップページ
  get '/admin', to: 'admin/homes#top'

  # 商品一覧
  resources :admin/items, only: [:index, :new, :create, :show, :edit, :update, :status]

  # 顧客一覧
  resources :admin/customers, only: [:index, :show, :edit, :update]

  # ジャンル一覧
  resources :admin/genres, only: [:index, :new, :create, :edit, :update]

  # 注文詳細画面
  get '/admin/order_details/:id', to: 'admin/order_details#show'

  # 製作ステータス
  patch '/admin/order_details/:id', to: 'admin/order_details#status'
end


=================================================================
1) ユーザーの退会処理 (PATCH)
class UsersController < ApplicationController
  def destroy
    @user = current_user
    @user.update(is_deleted: true)
    redirect_to users_path    #--- 退会確認画面へリダイレクト
  end
end

2) 販売ステータスの更新 (PATCH)
class ProductsController < ApplicationController
  def update_status
    @product = Product.find(params[:id])
    @product.update(sale_status: params[:sale_status])
    redirect_to product_path(@product)    #--- 販売ステータス更新完了画面へリダイレクト
  end
end

3) 注文ステータスの更新(PATCH)
class OrdersController < ApplicationController
  def update_status
    @order = Order.find(params[:id])
    @order.update(status: params[:status])
    redirect_to order_path(@order)    #--- 注文ステータス更新完了画面へリダイレクト
  end
end

4) ジャンル名称の変更(PUT)
class GenresController < ApplicationController
  def update
    genre = Genre.find(params[:id])    #--- ジャンルを取得
    genre.update(name: params[:name])    #--- ジャンルの名称を更新
    genre.products.each do |product|     #--- ジャンルに紐付く商品の名称を更新
      product.update(name: product.name.gsub(genre.name, params[:name]))
    end
    redirect_to genres_path    #--- ジャンル更新完了画面へリダイレクト
  end
  product.update(name: product.name.gsub(genre.name, params[:name]))
end

5) 注文のキャンセル時に、注文のキャンセル理由を記録する場合(PUT)
class OrdersController < ApplicationController
  def cancel
    order = Order.find(params[:id])        #--- 注文を取得
    order.update(status: "canceled", cancel_reason: params[:cancel_reason])        #--- 注文ステータスを「キャンセル済み」に更新
    redirect_to order_path(order)        #--- 注文キャンセル完了画面へリダイレクト
  end
end



